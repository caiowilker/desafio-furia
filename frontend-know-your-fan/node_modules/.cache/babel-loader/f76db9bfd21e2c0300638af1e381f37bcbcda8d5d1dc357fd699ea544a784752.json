{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  if (!validarCPF(fan.cpf)) {\n    alert(\"CPF inválido.\");\n    return;\n  }\n  if (!fan.email.includes('@')) {\n    alert(\"Email inválido.\");\n    return;\n  }\n\n  // Transforma interesses em array de strings, removendo espaços em excesso\n  const interessesArray = fan.interesses.split(',').map(item => item.trim()).filter(item => item.length > 0);\n  setLoading(true);\n  setError(null);\n  setSuccess(false);\n  try {\n    const response = await api.post('/fans', {\n      ...fan,\n      interesses: interessesArray\n    });\n    setSuccess(true);\n    alert(\"Fã cadastrado com sucesso! ID: \" + response.data.id);\n    setFan({\n      nome: '',\n      email: '',\n      cpf: '',\n      interesses: '',\n      endereco: ''\n    });\n  } catch (error) {\n    console.error(\"Erro ao cadastrar fã:\", error);\n    if (error.response) {\n      setError(error.response.data.message || \"Erro ao cadastrar fã. Tente novamente.\");\n    } else {\n      setError(\"Erro de conexão com o servidor. Tente novamente mais tarde.\");\n    }\n  } finally {\n    setLoading(false);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","validarCPF","fan","cpf","alert","email","includes","interessesArray","interesses","split","map","item","trim","filter","length","setLoading","setError","setSuccess","response","api","post","data","id","setFan","nome","endereco","error","console","message"],"sources":["C:/Users/Família/OneDrive/Documentos/Java Spring Boot/know-your-fan/frontend-know-your-fan/src/components/CadastroFan.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  if (!validarCPF(fan.cpf)) {\r\n    alert(\"CPF inválido.\");\r\n    return;\r\n  }\r\n\r\n  if (!fan.email.includes('@')) {\r\n    alert(\"Email inválido.\");\r\n    return;\r\n  }\r\n\r\n  // Transforma interesses em array de strings, removendo espaços em excesso\r\n  const interessesArray = fan.interesses\r\n    .split(',')\r\n    .map(item => item.trim())\r\n    .filter(item => item.length > 0);\r\n\r\n  setLoading(true);\r\n  setError(null);\r\n  setSuccess(false);\r\n\r\n  try {\r\n    const response = await api.post('/fans', {\r\n      ...fan,\r\n      interesses: interessesArray\r\n    });\r\n\r\n    setSuccess(true);\r\n    alert(\"Fã cadastrado com sucesso! ID: \" + response.data.id);\r\n    setFan({\r\n      nome: '',\r\n      email: '',\r\n      cpf: '',\r\n      interesses: '',\r\n      endereco: ''\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Erro ao cadastrar fã:\", error);\r\n    if (error.response) {\r\n      setError(error.response.data.message || \"Erro ao cadastrar fã. Tente novamente.\");\r\n    } else {\r\n      setError(\"Erro de conexão com o servidor. Tente novamente mais tarde.\");\r\n    }\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI,CAACC,UAAU,CAACC,GAAG,CAACC,GAAG,CAAC,EAAE;IACxBC,KAAK,CAAC,eAAe,CAAC;IACtB;EACF;EAEA,IAAI,CAACF,GAAG,CAACG,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC5BF,KAAK,CAAC,iBAAiB,CAAC;IACxB;EACF;;EAEA;EACA,MAAMG,eAAe,GAAGL,GAAG,CAACM,UAAU,CACnCC,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACxBC,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC;EAElCC,UAAU,CAAC,IAAI,CAAC;EAChBC,QAAQ,CAAC,IAAI,CAAC;EACdC,UAAU,CAAC,KAAK,CAAC;EAEjB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACC,IAAI,CAAC,OAAO,EAAE;MACvC,GAAGlB,GAAG;MACNM,UAAU,EAAED;IACd,CAAC,CAAC;IAEFU,UAAU,CAAC,IAAI,CAAC;IAChBb,KAAK,CAAC,iCAAiC,GAAGc,QAAQ,CAACG,IAAI,CAACC,EAAE,CAAC;IAC3DC,MAAM,CAAC;MACLC,IAAI,EAAE,EAAE;MACRnB,KAAK,EAAE,EAAE;MACTF,GAAG,EAAE,EAAE;MACPK,UAAU,EAAE,EAAE;MACdiB,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,IAAIA,KAAK,CAACR,QAAQ,EAAE;MAClBF,QAAQ,CAACU,KAAK,CAACR,QAAQ,CAACG,IAAI,CAACO,OAAO,IAAI,wCAAwC,CAAC;IACnF,CAAC,MAAM;MACLZ,QAAQ,CAAC,6DAA6D,CAAC;IACzE;EACF,CAAC,SAAS;IACRD,UAAU,CAAC,KAAK,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}